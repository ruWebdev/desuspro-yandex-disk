name: Deploy

on:
  push:
    branches:
      - develop
      - main

jobs:
  deploy:
    runs-on: self-hosted
    strategy:
      matrix:
        branch: [develop, main]

    if: github.ref == 'refs/heads/${{ matrix.branch }}'

    steps:
      # ----------------------
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # ----------------------
      # Cache PHP dependencies
      - name: Cache PHP dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: vendor-${{ hashFiles('**/composer.lock') }}

      # ----------------------
      # Install PHP dependencies (только недостающие)
      - name: Install PHP dependencies
        run: |
          composer install --no-dev --optimize-autoloader --prefer-dist --no-interaction --ignore-platform-reqs

      # ----------------------
      # Cache Node dependencies
      - name: Cache Node dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      # ----------------------
      # Build frontend
      - name: Build frontend
        run: |
          npm install
          npm run build

      # ----------------------
      # Deploy code
      - name: Deploy to server
        run: |
          if [ "${{ matrix.branch }}" == "develop" ]; then
            DEPLOY_PATH="/var/www/art/dev"
          else
            DEPLOY_PATH="/var/www/art/prod"
          fi

          # Синхронизация кода, исключая vendor и другие директории
          rsync -avz --exclude='.git' --exclude='.env' --exclude='storage' --exclude='bootstrap/cache' --exclude='vendor' ./ "$DEPLOY_PATH"

          cd "$DEPLOY_PATH"

          # Устанавливаем новые пакеты, не трогая старые
          composer install --no-dev --optimize-autoloader --prefer-dist --no-interaction --ignore-platform-reqs

          # Artisan команды
          sudo -u www-data php artisan migrate --force
          sudo -u www-data php artisan config:clear
          sudo -u www-data php artisan cache:clear
